{El centro de deportes Fortaco’s quiere procesar la información de los 4 tipos de suscripciones que ofrece:
1)Musculación, 2)Spinning, 3)Cross Fit, 4)Todas las clases. Para ello, el centro dispone de una tabla con
información sobre el costo mensual de cada tipo de suscripción.
Realizar un programa que lea y almacene la información de los clientes del centro. De cada cliente se conoce el
nombre, DNI, edad y tipo de suscripción contratada (valor entre 1 y 4). Cada cliente tiene una sola suscripción.
La lectura finaliza cuando se lee el cliente con DNI 0, el cual no debe procesarse.
Una vez almacenados todos los datos, procesar la estructura de datos generada, calcular e informar:
- La ganancia total de Fortaco’s
- Las 2 suscripciones con más clientes.
- Genere una lista con nombre y DNI de los clientes de más de 40 años que están suscritos a CrossFit o a
Todas las clases. Esta lista debe estar ordenada por DNI.}

program ejericicio12;
const
tam=4;
type
sus = 1..4; 
suscripciones = array [1..tam] of real;

cliente = record
    nom:string; 
    dni:integer;
    edad: integer;
    tiposus: sus;
end; 

lista =^nodo;

nodo = record
    dato: cliente;
    sig: lista;
end;

contador = array [1..tam] of integer;

mas40 = record
    nom: string;
    dni:integer;
end; 

lista2=^ nodo2;

nodo2= record
    dato:mas40;
    sig:lista2;
end;

procedure inicializarv (var c:contador);
var
i:integer;
begin
    for i:= 1 to tam do 
        c[i]:=0;
end;

procedure cargarv (var v:suscripciones);
begin
    v[1]:= 10;
    v[2]:=15;
    v[3]:= 20;
    v[4]:= 30;
end;

procedure leerc (var c:cliente);
begin
    writeln('ingrese el dni del cliente');
    readln(c.dni);
    if (c.dni <> 0) then begin 
    writeln('íngrese el nombre del cliente');
    readln(c.nom);
    writeln('ingrese la edad del cliente');
    readln(c.edad);
    writeln('ingrese el tipo de suscripcion que contrato el cliente (de 1 a 4)');
    readln(c.tiposus);
end; 
end;

procedure insertarO ( var l: lista; c:cliente);
var
nue,act,ant: lista;
begin
    new(nue);
    nue^.dato:= c;
    act:= l;
    ant:=l;
    while (act<>nil) and (c.dni > act^.dato.dni) do begin
        ant:=act;
        act:= act^.sig;
    end;
    
    if (act = ant) then
        l:= nue
    else 
        ant^.sig:= nue;
    nue^.sig:=act;
end; 

procedure cargarL (var l:lista);
var
c:cliente;
begin
leerc(c);
while (c.dni <> 0) do begin
    insertarO(l,c);
    leerc(c);
end;
end;

procedure agregarAt ( var l2:lista2; m:mas40; var ult: lista2);
var
nue:lista2;
begin
new(nue);
nue^.dato:= m;
nue^.sig:= nil;
if (l2 = nil) then
    l2:= nue
else 
    ult^.sig:= nue;
ult:=nue;
end; 


procedure maximos (c:contador; var max1, max2: integer);
var
aux1,aux2, i: integer;
begin
    aux1:= -1;
    for i:= 1 to tam do begin 
      if (c[i] > aux1) then begin 
        aux2:=aux1;
        max2:= max1;
        aux1:= c[i];
        max1:= i;
    end
    else begin
        if (c[i] > aux2) then begin
            aux2:= c[i];
            max2:= i;
        end;
    end;
end;
 end; 
 
function cumple (edad:integer; tipo: integer): boolean;
var
flag: boolean;
begin
    flag:= false;
    if (edad> 40) then begin
        if (tipo= 3) or ( tipo = 4) then 
            flag:= true; 
    end;
    cumple:= flag;
end;

procedure recorrerl (l:lista; v:suscripciones;c:contador; var l2:lista2);
var
gantot: real; m:mas40; ult: lista2; max1,max2: integer; 
begin
    gantot:=0;
    while (l<> nil) do begin 
        gantot:= gantot + v[l^.dato.tiposus];
        c[l^.dato.tiposus]:= c[l^.dato.tiposus] + 1;
        if (cumple(l^.dato.edad, l^.dato.tiposus)) then begin
          m.nom:= l^.dato.nom;
          m.dni:= l^.dato.dni;
          agregarAt(l2,m,ult); 
         end;
         l:=l^.sig; 
    end;
    writeln('el total de ganancias es de:', gantot);
    maximos(c,max1,max2);
    writeln ('el tipo con mas suscripciones es el tipo numero:', max1, ' y el segundo con mas sus es:', max2);
    end; 
var 
l:lista; l2: lista2; c:contador; v:suscripciones;
begin
cargarv(v);
inicializarv(c);
l:=nil;
l2:=nil;
cargarL(l);
recorrerl(l,v,c,l2);
end. 

    
